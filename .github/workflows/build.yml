name: Build
on:
  workflow_dispatch:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  linux:
    name: Linux
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        os: [ubuntu-24.04]
      fail-fast: false
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
        with:
          extra-conf: |
            keep-env-derivations = true
            keep-outputs = true
      - name: Restore and save Nix store
        uses: nix-community/cache-nix-action@v6
        with:
          primary-key: nix-${{ runner.os }}-${{ hashFiles('**/*.nix', '**/flake.lock') }}
          restore-prefixes-first-match: nix-${{ runner.os }}-
          gc-max-store-size-linux: 1G
          purge: true
          purge-prefixes: nix-${{ runner.os }}-
          purge-created: 0
          purge-last-accessed: 0
          purge-primary-key: never
      - name: Install Cachix
        uses: cachix/cachix-action@v12
        with:
          name: pupbrained
          signingKey: "${{ secrets.CACHIX_SIGNING_KEY }}"
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
      - name: Build glibc-generic package
        id: build_glibc
        run: echo "path=$(nix build .#glibc-generic --no-link --print-out-paths)" >> $GITHUB_OUTPUT

      - name: Push glibc-generic to Cachix
        run: cachix push pupbrained ${{ steps.build_glibc.outputs.path }}

      - name: Build musl-generic package
        id: build_musl
        run: echo "path=$(nix build .#musl-generic --no-link --print-out-paths)" >> $GITHUB_OUTPUT

      - name: Push musl-generic to Cachix
        run: cachix push pupbrained ${{ steps.build_musl.outputs.path }}

      - name: Upload Nix glibc-generic Artifact
        uses: actions/upload-artifact@v3
        with:
          name: nix-build-glibc-generic
          path: ${{ steps.build_glibc.outputs.path }}

      - name: Upload Nix musl-generic Artifact
        uses: actions/upload-artifact@v3
        with:
          name: nix-build-musl-generic
          path: ${{ steps.build_musl.outputs.path }}
  windows:
    name: Windows
    runs-on: [native]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Meson Build
        run: >
          meson setup build --buildtype=release
          -Dc_args="-fuse-ld=lld"
          -Dcpp_args="-fuse-ld=lld"
          -Dc_link_args="-fuse-ld=lld"
          -Dcpp_link_args="-fuse-ld=lld"
      - name: Compile with Meson
        run: meson compile -C build
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: windows-build
          path: build/
