# ===================================================================== #
#                    Draconis++ Global Configuration                    #
#                                                                       #
#       Additional configuration can be found in `config.toml` or       #
#  `include/Config.hpp`, depending on the `precompiled_config` option.  #
# ===================================================================== #

option('build_examples', type: 'boolean', value: true)
option('build_tests', type: 'boolean', value: true)

# Note: These are primarily intended for use with Nix.
option('build_for_musl', type: 'boolean', value: false)
option('use_linked_pci_ids', type: 'boolean', value: false)

# Note: Enabling this disables runtime TOML parsing and configuration overriding.
option('precompiled_config', type: 'boolean', value: false)

# Linux-specific
option(
  'pugixml',
  type: 'feature',
  value: 'auto',
  description: 'Use pugixml to parse XBPS package metadata on Void Linux',
)

# Linux/BSD-specific
option(
  'xcb',
  type: 'feature',
  value: 'enabled',
  description: 'Use libxcb to get the X11 window manager/display(s)',
)

# Linux/BSD-specific
option(
  'wayland',
  type: 'feature',
  value: 'enabled',
  description: 'Use wayland-client to get the Wayland compositor/display(s)',
)

# Note: Requires DBus on Linux/BSD and MediaRemote.framework (private API) on macOS.
option(
  'nowplaying',
  type: 'feature',
  value: 'enabled',
  description: 'Enable nowplaying functionality',
)

option(
  'weather',
  type: 'feature',
  value: 'enabled',
  description: 'Enable fetching weather data',
)

option(
  'packagecount',
  type: 'feature',
  value: 'enabled',
  description: 'Enable getting package count',
)

option(
  'caching',
  type: 'feature',
  value: 'enabled',
  description: 'Enable caching functionality',
)